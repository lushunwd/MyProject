<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

    <description>Spring公共配置</description>

    <!-- 开启定时任务 -->
    <task:annotation-driven/>


    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages"/>
    </bean>

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath*:/mybatis/*Mapper.xml"/>
        <!-- mybatis配置文件路径 -->
        <property name="configLocation" value="classpath:/mybatis/config.xml"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <!-- 这个执行器会批量执行更新语句, 还有SIMPLE 和 REUSE -->
        <constructor-arg index="1" value="BATCH"/>
    </bean>

    <!-- 扫描basePackage接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 映射器接口文件的包路径， -->
        <property name="basePackage" value="com.lushun.dao"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>


    <!-- 配置DataSource数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- Connection Pooling Info -->
        <property name="initialSize" value="10" />
        <property name="maxActive" value="500" />
        <property name="maxIdle" value="10" />
        <property name="maxWait" value="60000" />
        <property name="poolPreparedStatements" value="true" />
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="180" />

        <property name="defaultAutoCommit" value="false" />
    </bean>

    <!-- 数据源配置, 使用Tomcat JDBC连接池 -->
    <!--<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"-->
          <!--destroy-method="close">-->
        <!--<property name="driverClassName" value="${jdbc.driver}" />-->
        <!--<property name="url" value="${jdbc.url}" />-->
        <!--<property name="username" value="${jdbc.username}" />-->
        <!--<property name="password" value="${jdbc.password}" />-->
        <!--<property name="maxActive" value="${jdbc.pool.maxActive}" />-->
        <!--<property name="maxIdle" value="${jdbc.pool.maxIdle}" />-->
        <!--<property name="minIdle" value="0" />-->
        <!--<property name="defaultAutoCommit" value="false" />-->
    <!--</bean>-->



     <!--c3p0连接池配置-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--&lt;!&ndash; 用户名 &ndash;&gt;-->
        <!--<property name="user" value="${jdbc.username}"/>-->
        <!--&lt;!&ndash; 用户密码 &ndash;&gt;-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <!--<property name="driverClass" value="${jdbc.driver}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc.url}"/>-->
        <!--&lt;!&ndash;连接池中保留的最大连接数。默认值: 15 &ndash;&gt;-->
        <!--<property name="maxPoolSize" value="20"/>-->
        <!--&lt;!&ndash; 连接池中保留的最小连接数，默认为：3 &ndash;&gt;-->
        <!--<property name="minPoolSize" value="2"/>-->
        <!--&lt;!&ndash; 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 &ndash;&gt;-->
        <!--<property name="initialPoolSize" value="2"/>-->
        <!--&lt;!&ndash;最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 &ndash;&gt;-->
        <!--<property name="maxIdleTime" value="60"/>-->
        <!--&lt;!&ndash; 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 &ndash;&gt;-->
        <!--<property name="checkoutTimeout" value="3000"/>-->
        <!--&lt;!&ndash;当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 &ndash;&gt;-->
        <!--<property name="acquireIncrement" value="2"/>-->
        <!--&lt;!&ndash;定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次 &ndash;&gt;-->
        <!--<property name="acquireRetryAttempts" value="0"/>-->
        <!--&lt;!&ndash;重新尝试的时间间隔，默认为：1000毫秒 &ndash;&gt;-->
        <!--<property name="acquireRetryDelay" value="1000"/>-->
        <!--&lt;!&ndash;关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 &ndash;&gt;-->
        <!--<property name="autoCommitOnClose" value="false"/>-->
        <!--&lt;!&ndash;c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试使用。默认值: null &ndash;&gt;-->
        <!--<property name="automaticTestTable" value="Test"/>-->
        <!--&lt;!&ndash;如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: false &ndash;&gt;-->
        <!--<property name="breakAfterAcquireFailure" value="false"/>-->
        <!--&lt;!&ndash;每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 &ndash;&gt;-->
        <!--<property name="idleConnectionTestPeriod" value="60"/>-->
        <!--&lt;!&ndash;c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 0 &ndash;&gt;-->
        <!--<property name="maxStatements" value="100"/>-->
        <!--&lt;!&ndash;maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 &ndash;&gt;-->
        <!--<property name="maxStatementsPerConnection" value="0"/>-->
    <!--</bean>-->

    <!-- production环境 -->
    <beans profile="production">
        <context:property-placeholder
                ignore-unresolvable="true" file-encoding="utf-8"
                location="classpath:jdbc.properties"/>
    </beans>

</beans>